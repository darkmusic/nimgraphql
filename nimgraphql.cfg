[n.global]
output = nimgraphql

[n.include]
nimgraphql/c
nimgraphql
nimgraphql/parsergen

[n.prepare]
git = "https://github.com/graphql/libgraphqlparser"

execute.cxx = """cmd /c cd nimgraphql\ast && python2 ast.py cxx ast.ast > ..\Ast.h"""
execute.cxx_impl = """cmd /c cd nimgraphql\ast && python2 ast.py cxx_impl ast.ast > ..\Ast.cpp"""
execute.cxx_visitor = """cmd /c cd nimgraphql\ast && python2 ast.py cxx_visitor ast.ast > ..\AstVisitor.h"""

execute.c = """cmd /c cd nimgraphql\ast && python2 ast.py c ast.ast > ..\c\GraphQLAst.h"""
execute.c_impl = """cmd /c cd nimgraphql\ast && python2 ast.py c_impl ast.ast > ..\c\GraphQLAst.cpp"""
execute.c_visitor_impl = """cmd /c cd nimgraphql\ast && python2 ast.py c_visitor_impl ast.ast > ..\c\GraphQLAstForEachConcreteType.h"""

execute.cxx_json_visitor_header = """cmd /c cd nimgraphql\ast && python2 ast.py cxx_json_visitor_header ast.ast > ..\JsonVisitor.h.inc"""
execute.cxx_json_visitor_impl = """cmd /c cd nimgraphql\ast && python2 ast.py cxx_json_visitor_impl ast.ast > ..\JsonVisitor.cpp.inc"""

[n.wildcard]
wildcard.h = *.h

regex.h = """struct GraphQL([a-zA-Z]+);"""
replace.h = """struct GraphQL$1 { int dummy; };"""

wildcard.nim = *.nim

search.nim = """dummy* {.importc: "dummy".}: cint"""
replace.nim = ""

[GraphQLAst.h]
preprocess = true
defines = true

compile = GraphQLAst.cpp
compile.2 = Ast.cpp

flags = "--stdcall --prefix:GraphQL --prefix:graphql --nep1"

[GraphQLAstNode.h]
preprocess = true
defines = true

compile = GraphQLAstNode.cpp

flags = "--stdcall --prefix:GraphQL --prefix:graphql --nep1"

[GraphQLAstVisitor.h]
preprocess = true
defines = true

compile = GraphQLAstVisitor.cpp

flags = "--stdcall --prefix:GraphQL --prefix:graphql --nep1"

[GraphQLAstToJSON.h]
preprocess = true
defines = true

compile.1 = GraphQLAstToJSON.cpp
compile.2 = JsonVisitor.cpp

flags = "--stdcall --prefix:GraphQL --prefix:graphql --nep1"

[GraphQLParser.h]
preprocess = true
defines = true

compile = c/GraphQLParser.cpp
compile.2 = $output/GraphQLParser.cpp
compile.3 = """$output/parsergen/*.cpp"""

flags = "--stdcall --prefix:GraphQL --prefix:graphql --nep1"

[GraphQLAst.nim]
search = "type"
replace = ""

regex = """(?s:(\n  Ast.*?object\n))"""
move = "{.compile: \"nimgraphql/c/GraphQLAst.cpp\".}\n"

search.2 = "{.compile: \"nimgraphql/c/GraphQLAst.cpp\".}\n"
append.2 = "type\n"

[GraphQLAstToJSON.nim]
regex = """(?s:type.*?AstNode.*? = object)"""
replace = "import GraphQLAstNode"

[GraphQLParser.nim]
regex = """(?s:type.*?AstNode.*? = object)"""
replace = "import GraphQLAstNode"

[GraphQLAstVisitor.nim]
regex = """  AstNode.*? = object"""
replace = ""

search = "type"
prepend = "import GraphQLAst, GraphQLAstNode\n"

[n.sourcefile]
"$output/*.nim"

[n.post]
reset = true